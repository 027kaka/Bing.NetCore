<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Serialization.NewtonsoftJson</name>
    </assembly>
    <members>
        <member name="T:Bing.Serialization.Json.JTokenConversionExtensions">
            <summary>
            <see cref="T:Newtonsoft.Json.Linq.JToken"/> 扩展
            </summary>
            <summary>
            <see cref="T:Newtonsoft.Json.Linq.JToken"/> 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToInt(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为32位整型
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToInt(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为32位整型
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToLong(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为64位整型
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToLong(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为64位整型
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToFloat(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为32位浮点型
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToFloat(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为32位浮点型
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDouble(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为64位浮点型
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDouble(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为64位浮点型
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToList``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为列表
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToList``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为列表
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToEnumerable``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为迭代集合
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToEnumerable``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为迭代集合
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDictionary``2(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为字典
            </summary>
            <typeparam name="TKey">键类型</typeparam>
            <typeparam name="TValue">值类型</typeparam>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDictionary``2(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为字典
            </summary>
            <typeparam name="TKey">键类型</typeparam>
            <typeparam name="TValue">值类型</typeparam>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDateTime(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为时间
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToDateTime(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为时间
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToGuid(Newtonsoft.Json.Linq.JToken)">
            <summary>
            转换为Guid
            </summary>
            <param name="token">JToken</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.ToGuid(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            转换为Guid
            </summary>
            <param name="token">JToken</param>
            <param name="sectionName">部分名称</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetToken(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取Token
            </summary>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetString(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取字符串
            </summary>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetBool(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取布尔值
            </summary>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetInt(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取32位整型
            </summary>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetDouble(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取64位浮点型
            </summary>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetList``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取列表
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetDictionary``2(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取字典
            </summary>
            <typeparam name="TKey">键类型</typeparam>
            <typeparam name="TValue">值类型</typeparam>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="M:Bing.Serialization.Json.JTokenConversionExtensions.GetObject``1(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="token">JToken</param>
            <param name="key">键名</param>
        </member>
        <member name="T:Bing.Serialization.Json.Extensions">
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
            <summary>
            Newtonsoft Json 扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.ToJsonBytes(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            转换为Json字节数组
            </summary>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.ToJsonBytesAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            转换为Json字节数组
            </summary>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonBytes``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            从Json字节数组反序列化为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="data">Json字节数组</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonBytes(System.Byte[],System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            从Json字节数组反序列化为对象
            </summary>
            <param name="data">Json字节数组</param>
            <param name="type">对象类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonBytesAsync``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            从Json字节数组反序列化为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="data">Json字节数组</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonBytesAsync(System.Byte[],System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            从Json字节数组反序列化为对象
            </summary>
            <param name="data">Json字节数组</param>
            <param name="type">对象类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FixJsonDateTimeFormat(System.String,System.String)">
            <summary>
            处理Json的时间格式为正常格式
            </summary>
            <param name="jsonString">Json字符串</param>
            <param name="format">时间格式</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.ToJson(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            转换为Json字符串
            </summary>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.ToJsonAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            转换为Json字符串
            </summary>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPack(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPackTo(System.Object,System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPackBy(System.IO.Stream,System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="stream">流</param>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPackAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPackToAsync(System.Object,System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonPackByAsync(System.IO.Stream,System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="stream">流</param>
            <param name="obj">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonUnpack``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonUnpack(System.IO.Stream,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <param name="stream">流</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonUnpackAsync``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.JsonUnpackAsync(System.IO.Stream,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <param name="stream">流</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.SerializeToString``1(Newtonsoft.Json.JsonSerializer,``0)">
            <summary>
            序列化为字符串
            </summary>
            <typeparam name="TRequest">请求对象类型</typeparam>
            <param name="serializer">Json序列化器</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.DeserializeFromString``1(Newtonsoft.Json.JsonSerializer,System.String)">
            <summary>
            反序列化为对象
            </summary>
            <typeparam name="TResponse">响应对象类型</typeparam>
            <param name="serializer">Json序列化器</param>
            <param name="json">Json字符串</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.SerializeToMemoryStreamAsync``1(Newtonsoft.Json.JsonSerializer,``0,System.Threading.CancellationToken)">
            <summary>
            序列化到内存流
            </summary>
            <typeparam name="TRequest">请求对象类型</typeparam>
            <param name="serializer">Json序列化器</param>
            <param name="request">请求对象</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.ToSerializer(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            转换为Json序列化器
            </summary>
            <param name="jsonSerializerSettings">Json序列化设置</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.SerializeToMemoryStreamAsync``1(Newtonsoft.Json.JsonSerializerSettings,``0,System.Threading.CancellationToken)">
            <summary>
            序列化到内存流
            </summary>
            <typeparam name="TRequest">请求对象类型</typeparam>
            <param name="jsonSerializerSettings">Json序列化器设置</param>
            <param name="request">请求对象</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.SerializeToString``1(Newtonsoft.Json.JsonSerializerSettings,``0)">
            <summary>
            序列化为字符串
            </summary>
            <typeparam name="TRequest">请求对象类型</typeparam>
            <param name="jsonSerializerSettings">Json序列化器设置</param>
            <param name="request">请求对象</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.DeserializeFromString``1(Newtonsoft.Json.JsonSerializerSettings,System.String)">
            <summary>
            反序列化为对象
            </summary>
            <typeparam name="TResponse">响应对象类型</typeparam>
            <param name="jsonSerializerSettings">Json序列化器设置</param>
            <param name="json">Json字符串</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJson``1(System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">json字符串</param>
            <param name="settings">序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJson(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <param name="json">json字符串</param>
            <param name="type">对象类型</param>
            <param name="settings">序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonAsync``1(System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="json">json字符串</param>
            <param name="settings">序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Extensions.FromJsonAsync(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            将Json字符串转换为对象
            </summary>
            <param name="json">json字符串</param>
            <param name="type">对象类型</param>
            <param name="settings">序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="T:Bing.Serialization.Json.InternalExtensions">
            <summary>
            内部扩展
            </summary>
        </member>
        <member name="M:Bing.Serialization.Json.InternalExtensions.CastToBytes(System.IO.Stream)">
            <summary>
            转换为字节数组
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="M:Bing.Serialization.Json.InternalExtensions.CastToBytesAsync(System.IO.Stream)">
            <summary>
            转换为字节数组
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="T:Bing.Serialization.Json.Newtonsoft.JsonHelper">
            <summary>
            Json操作辅助类
            </summary>
            <summary>
            Json操作辅助类
            </summary>
            <summary>
            Json操作辅助类
            </summary>
            <summary>
            Json操作辅助类
            </summary>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.SerializeToBytesAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="o">序列化对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.SerializeAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="o">序列化对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeFromBytesAsync``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="data">数据</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeFromBytesAsync(System.Byte[],System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <param name="data">数据</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeAsync``1(System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="json">Json字符串</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeAsync(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <param name="json">Json字符串</param>
            <param name="type">反序列化对象类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.PackAsync(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.PackAsync(System.Object,System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.UnpackAsync``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.UnpackAsync(System.IO.Stream,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <param name="stream">流</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.SerializeToBytes(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="o">序列化对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Serialize(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="o">序列化对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeFromBytes``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="data">数据</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.DeserializeFromBytes(System.Byte[],System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <param name="data">数据</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Deserialize``1(System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="json">Json字符串</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Deserialize(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            反序列化
            </summary>
            <param name="json">Json字符串</param>
            <param name="type">反序列化对象类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.TouchSettings(Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            触发设置
            </summary>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.UseNodaTimeIfNeed(Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            启用基于 NodaTime 的 Json 序列化设置
            </summary>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Pack(System.Object,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Pack(System.Object,System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            装箱
            </summary>
            <param name="o">对象</param>
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Unpack``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <typeparam name="T">对象类型</typeparam> 
            <param name="stream">流</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="M:Bing.Serialization.Json.Newtonsoft.JsonHelper.Unpack(System.IO.Stream,System.Type,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            拆箱
            </summary>
            <param name="stream">流</param>
            <param name="type">类型</param>
            <param name="settings">Json序列化设置</param>
            <param name="withNodaTime">是否启用NodaTime</param>
        </member>
        <member name="T:Bing.Serialization.Json.Newtonsoft.JsonManager">
            <summary>
            Json 管理器
            </summary>
        </member>
        <member name="F:Bing.Serialization.Json.Newtonsoft.JsonManager._encoding">
            <summary>
            字符编码
            </summary>
        </member>
        <member name="F:Bing.Serialization.Json.Newtonsoft.JsonManager._settings">
            <summary>
            Json序列化设置
            </summary>
        </member>
        <member name="F:Bing.Serialization.Json.Newtonsoft.JsonManager._settingsWithNodaTime">
            <summary>
            Json序列化设置 - 基于NodaTime
            </summary>
        </member>
        <member name="P:Bing.Serialization.Json.Newtonsoft.JsonManager.DefaultEncoding">
            <summary>
            默认字符编码
            </summary>
        </member>
        <member name="P:Bing.Serialization.Json.Newtonsoft.JsonManager.DefaultSettings">
            <summary>
            默认Json序列化设置
            </summary>
        </member>
        <member name="P:Bing.Serialization.Json.Newtonsoft.JsonManager.DefaultSettingsWithNodaTime">
            <summary>
            默认Json序列化设置 - 基于NodaTime
            </summary>
        </member>
        <member name="T:Bing.Serialization.NewtonsoftJsonSerializer">
            <summary>
            Newtonsoft Json 序列化器
            </summary>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.Serialize``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T">序列化对象类型</typeparam>
            <param name="o">被序列化对象</param>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.Deserialize``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">被序列化对象类型</typeparam>
            <param name="data">被反序列化对象</param>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.Deserialize(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="data">被反序列化对象</param>
            <param name="type">被序列化对象类型</param>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.SerializeAsync``1(``0)">
            <summary>
            序列化
            </summary>
            <typeparam name="T">序列化对象类型</typeparam>
            <param name="o">被序列化对象</param>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.DeserializeAsync``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T">被序列化对象类型</typeparam>
            <param name="data">被反序列化对象</param>
        </member>
        <member name="M:Bing.Serialization.NewtonsoftJsonSerializer.DeserializeAsync(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="data">被反序列化对象</param>
            <param name="type">被序列化对象类型</param>
        </member>
    </members>
</doc>
